# NFL Receiver Garbage Time Fantasy Points Analysis
# Find which receivers get the highest % of fantasy points when win probability < 5%
# Uses 2024 season data from nflfastR
# Note: Includes all receivers (WRs, TEs, RBs) - manually filter for WRs from results

# Load required libraries
library(nflfastR)
library(dplyr)
library(tidyr)  # For pivot_wider
library(ggplot2)
library(DT)

# Load play-by-play data for 2024 season
pbp_2024 <- load_pbp(2024)

# Define garbage time criteria using win probability
# Garbage time = win probability < 5% for either team
define_garbage_time <- function(data) {
  data %>%
    mutate(
      # Either team has <5% win probability
      garbage_time = case_when(
        wp < 0.05 | wp > 0.95 ~ TRUE,
        TRUE ~ FALSE
      )
    )
}

# Calculate PPR fantasy points for receiving plays
calculate_wr_fantasy_points <- function(data) {
  data %>%
    filter(
      !is.na(receiver_player_name),
      play_type %in% c("pass", "run")  # Include run plays in case WR gets handoff
    ) %>%
    mutate(
      # PPR Fantasy scoring: 1 pt per reception + 0.1 per receiving yard + 6 per TD
      fantasy_points = case_when(
        # Receiving plays
        play_type == "pass" & complete_pass == 1 ~ 
          1 + (receiving_yards * 0.1) + (pass_touchdown * 6),
        play_type == "pass" & complete_pass == 0 ~ 0,
        # Rushing plays for WRs (rare but happens)
        play_type == "run" & !is.na(rushing_yards) ~ 
          (rushing_yards * 0.1) + (rush_touchdown * 6),
        TRUE ~ 0
      ),
      fantasy_points = ifelse(is.na(fantasy_points), 0, fantasy_points)
    )
}

# Process the data
wr_garbage_analysis <- pbp_2024 %>%
  define_garbage_time() %>%
  calculate_wr_fantasy_points() %>%
  filter(fantasy_points > 0 | (!is.na(receiver_player_name) & complete_pass == 1)) %>%
  group_by(receiver_player_name, garbage_time) %>%
  summarise(
    total_fantasy_points = sum(fantasy_points, na.rm = TRUE),
    receptions = sum(complete_pass, na.rm = TRUE),
    receiving_yards = sum(receiving_yards, na.rm = TRUE),
    receiving_tds = sum(pass_touchdown, na.rm = TRUE),
    targets = n(),
    .groups = "drop"
  ) %>%
  pivot_wider(
    names_from = garbage_time,
    values_from = c(total_fantasy_points, receptions, receiving_yards, receiving_tds, targets),
    values_fill = 0
  ) %>%
  # Clean up column names - pivot_wider creates FALSE/TRUE suffixes
  rename(
    regular_fantasy_points = total_fantasy_points_FALSE,
    garbage_fantasy_points = total_fantasy_points_TRUE,
    regular_receptions = receptions_FALSE,
    garbage_receptions = receptions_TRUE,
    regular_yards = receiving_yards_FALSE,
    garbage_yards = receiving_yards_TRUE,
    regular_tds = receiving_tds_FALSE,
    garbage_tds = receiving_tds_TRUE,
    regular_targets = targets_FALSE,
    garbage_targets = targets_TRUE
  ) %>%
  mutate(
    total_fantasy_points = regular_fantasy_points + garbage_fantasy_points,
    total_receptions = regular_receptions + garbage_receptions,
    total_yards = regular_yards + garbage_yards,
    total_tds = regular_tds + garbage_tds,
    total_targets = regular_targets + garbage_targets,
    garbage_time_pct = ifelse(total_fantasy_points > 0, 
                             (garbage_fantasy_points / total_fantasy_points) * 100, 0),
    garbage_time_pct = round(garbage_time_pct, 1)
  ) %>%
  # Filter for players with meaningful sample size
  filter(total_fantasy_points >= 100, total_targets >= 50) %>%
  arrange(desc(garbage_time_pct))

# Display top garbage time receivers
cat("TOP 15 RECEIVERS BY GARBAGE TIME FANTASY PERCENTAGE (2024)\n")
cat("Minimum 100 fantasy points and 50 targets\n")
cat("Garbage time = Win Probability < 5% for either team\n")
cat("Note: Includes all receivers (WRs, TEs, RBs) - filter manually for WRs\n\n")

top_garbage_receivers <- wr_garbage_analysis %>%
  select(
    Player = receiver_player_name,
    `Total FP` = total_fantasy_points,
    `Garbage FP` = garbage_fantasy_points,
    `Garbage %` = garbage_time_pct,
    `Garbage Rec` = garbage_receptions,
    `Garbage Yds` = garbage_yards,
    `Garbage TDs` = garbage_tds
  ) %>%
  head(15)

print(top_garbage_receivers)

# Create visualization
if(nrow(wr_garbage_analysis) > 0) {
  garbage_time_plot <- wr_garbage_analysis %>%
    head(20) %>%
    ggplot(aes(x = reorder(receiver_player_name, garbage_time_pct), y = garbage_time_pct)) +
    geom_col(aes(fill = garbage_time_pct), show.legend = FALSE) +
    geom_text(aes(label = paste0(garbage_time_pct, "%")), hjust = -0.1, size = 3) +
    scale_fill_gradient(low = "lightblue", high = "red") +
    coord_flip() +
    labs(
      title = "Top 20 Receivers by Garbage Time Fantasy Points %",
      subtitle = "2024 Season - All Receivers (WRs, TEs, RBs) - Min 100 fantasy points & 50 targets",
      x = "Receiver",
      y = "% of Fantasy Points from Garbage Time",
      caption = "Garbage Time: Win Probability < 5% for either team"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 14, face = "bold"),
      axis.text = element_text(size = 10)
    )
  
  print(garbage_time_plot)
} else {
  cat("No data available for visualization\n")
}

# Summary statistics
cat("\n\nSUMMARY STATISTICS:\n")
cat("Average garbage time %:", round(mean(wr_garbage_analysis$garbage_time_pct), 1), "%\n")
cat("Median garbage time %:", round(median(wr_garbage_analysis$garbage_time_pct), 1), "%\n")
cat("Receivers with >20% garbage time:", sum(wr_garbage_analysis$garbage_time_pct > 20), "\n")
cat("Receivers with >30% garbage time:", sum(wr_garbage_analysis$garbage_time_pct > 30), "\n")

# Show some context for the highest garbage time players
cat("\n\nCONTEXT FOR TOP GARBAGE TIME RECEIVERS:\n")
context_data <- wr_garbage_analysis %>%
  head(5) %>%
  select(receiver_player_name, total_fantasy_points, garbage_time_pct, 
         regular_receptions, garbage_receptions, regular_yards, garbage_yards)

print(context_data)

# Interactive table for exploration
cat("\n\nInteractive table available for detailed exploration\n")
datatable(
  wr_garbage_analysis %>%
    select(Player = receiver_player_name, `Total FP` = total_fantasy_points,
           `Regular FP` = regular_fantasy_points, `Garbage FP` = garbage_fantasy_points,
           `Garbage %` = garbage_time_pct, `Total Rec` = total_receptions,
           `Garbage Rec` = garbage_receptions, `Total Yds` = total_yards,
           `Garbage Yds` = garbage_yards, `Total TDs` = total_tds),
  options = list(pageLength = 25, scrollX = TRUE),
  caption = "2024 NFL Receiver Garbage Time Fantasy Analysis - Min 100 FP & 50 targets"
)
